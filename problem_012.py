#!/usr/bin/env python3

#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

#Let us list the factors of the first seven triangle numbers:

 #1: 1
 #3: 1,3
 #6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.
#
#What is the value of the first triangle number to have over five hundred divisors?

import primes
import itertools

def triangle_generator():
    tmp = 1
    while True:
        yield tmp * (tmp+1) // 2
        tmp += 1

def factors(factor_list):
    ans = set([1])
    for i in range(len(factor_list) + 1):
        for j in itertools.combinations(factor_list, i):
            tmp = 1
            for k in j:
                tmp *= k
            ans.add(tmp)
    return ans

prime_list = primes.primes(1000000)

for t in triangle_generator():
    tmp = factors(primes.prime_factors(t, prime_list))
    if len(tmp) > 500:
        print(t)
        exit()

